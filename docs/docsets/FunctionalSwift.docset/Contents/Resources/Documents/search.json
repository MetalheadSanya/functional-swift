{"Typealiases.html#/s:15FunctionalSwift6Resulta":{"name":"Result","abstract":"<p>Result representation of <code>Ether</code> type where <code>left</code> value is <code>Error</code> and <code>right</code> value is success.</p>"},"Protocols/Monoid.html#/s:15FunctionalSwift6MonoidP6memptyxvZ":{"name":"mempty","abstract":"<p>Identity of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Monoid.html#/s:15FunctionalSwift6MonoidP7mappendxxF\">mappend(_:)</a></code>.</p>","parent_name":"Monoid"},"Protocols/Monoid.html#/s:15FunctionalSwift6MonoidP7mappendxxF":{"name":"mappend(_:)","abstract":"<p>An associative operation.</p>","parent_name":"Monoid"},"Protocols/Monoid.html":{"name":"Monoid","abstract":"<p>The protocol of monoids (types with an associative binary operation that has an identity).</p>"},"Functions/|>(_:_:).html#/s:15FunctionalSwift2ogoiq_x_q_xctr0_lF1AL_xmfp":{"name":"A","parent_name":"|>(_:_:)"},"Functions/<|(_:_:).html#/s:15FunctionalSwift2looiq_q_xc_xtr0_lF1AL_xmfp":{"name":"A","parent_name":"<|(_:_:)"},"Functions/•(_:_:).html#/s:15FunctionalSwift003nvgoiq0_xcq0_q_c_q_xctr1_lF1AL_xmfp":{"name":"A","parent_name":"•(_:_:)"},"Functions/^>(_:_:).html#/s:15FunctionalSwift2xgois10DictionaryVyxq0_GADyxq_G_q0_ts8HashableRzr1_lF1TL_xmfp":{"name":"T","parent_name":"^>(_:_:)"},"Functions/<^(_:_:).html#/s:15FunctionalSwift2lxois10DictionaryVyq_xGx_ADyq_q0_Gts8HashableR_r1_lF1TL_xmfp":{"name":"T","parent_name":"<^(_:_:)"},"Functions/<^>(_:_:).html#/s:15FunctionalSwift3lxgois10DictionaryVyq0_q_Gq_xc_ADyq0_xGts8HashableR0_r1_lF1TL_xmfp":{"name":"T","parent_name":"<^>(_:_:)"},"Functions/<*>(_:_:).html#/s:15FunctionalSwift3lmgoiSayq_GSayq_xcG_SayxGtr0_lF1TL_xmfp":{"name":"T","parent_name":"<*>(_:_:)"},"Functions/-<<(_:_:).html#/s:15FunctionalSwift3slloiSayq_GACxc_SayxGtr0_lF1TL_xmfp":{"name":"T","parent_name":"-<<(_:_:)"},"Functions/>>-(_:_:).html#/s:15FunctionalSwift3ggsoiSayq_GSayxG_ACxctr0_lF1TL_xmfp":{"name":"T","parent_name":">>-(_:_:)"},"Functions/^>(_:_:).html#/s:15FunctionalSwift2xgoiSayq_GSayxG_q_tr0_lF1TL_xmfp":{"name":"T","parent_name":"^>(_:_:)"},"Functions/<^(_:_:).html#/s:15FunctionalSwift2lxoiSayxGx_Sayq_Gtr0_lF1TL_xmfp":{"name":"T","parent_name":"<^(_:_:)"},"Functions/<^>(_:_:).html#/s:15FunctionalSwift3lxgoiSayq_Gq_xc_SayxGtr0_lF1TL_xmfp":{"name":"T","parent_name":"<^>(_:_:)"},"Functions/<*>(_:_:).html#/s:15FunctionalSwift3lmgoiq_Sgq_xcSg_xSgtr0_lF1TL_xmfp":{"name":"T","parent_name":"<*>(_:_:)"},"Functions/-<<(_:_:).html#/s:15FunctionalSwift3slloiq_SgACxc_xSgtr0_lF1TL_xmfp":{"name":"T","parent_name":"-<<(_:_:)"},"Functions/>>-(_:_:).html#/s:15FunctionalSwift3ggsoiq_SgxSg_ACxctr0_lF1TL_xmfp":{"name":"T","parent_name":">>-(_:_:)"},"Functions/^>(_:_:).html#/s:15FunctionalSwift2xgoiq_SgxSg_q_tr0_lF1TL_xmfp":{"name":"T","parent_name":"^>(_:_:)"},"Functions/<^(_:_:).html#/s:15FunctionalSwift2lxoixSgx_q_Sgtr0_lF1TL_xmfp":{"name":"T","parent_name":"<^(_:_:)"},"Functions/<^>(_:_:).html#/s:15FunctionalSwift3lxgoiq_Sgq_xc_xSgtr0_lF1TL_xmfp":{"name":"T","parent_name":"<^>(_:_:)"},"Functions/<*>(_:_:).html#/s:15FunctionalSwift3lmgoiAA6EitherOyxq0_GADyxq0_q_cG_ADyxq_Gtr1_lF1TL_xmfp":{"name":"T","parent_name":"<*>(_:_:)"},"Functions/-<<(_:_:).html#/s:15FunctionalSwift3slloiAA6EitherOyq_q0_GAExc_ADyq_xGtr1_lF1TL_xmfp":{"name":"T","parent_name":"-<<(_:_:)"},"Functions/>>-(_:_:).html#/s:15FunctionalSwift3ggsoiAA6EitherOyxq0_GADyxq_G_AEq_ctr1_lF1TL_xmfp":{"name":"T","parent_name":">>-(_:_:)"},"Functions/^>(_:_:).html#/s:15FunctionalSwift2xgoiAA6EitherOyxq0_GADyxq_G_q0_tr1_lF1TL_xmfp":{"name":"T","parent_name":"^>(_:_:)"},"Functions/<^(_:_:).html#/s:15FunctionalSwift2lxoiAA6EitherOyq_xGx_ADyq_q0_Gtr1_lF1TL_xmfp":{"name":"T","parent_name":"<^(_:_:)"},"Functions/<^>(_:_:).html#/s:15FunctionalSwift3lxgoiAA6EitherOyq_q0_Gq0_xc_ADyq_xGtr1_lF1TL_xmfp":{"name":"T","parent_name":"<^>(_:_:)"},"Functions/<^>(_:_:).html":{"name":"<^>(_:_:)","abstract":"<p>An infix synonym for <code>map(_:)</code>.</p>"},"Functions/<^(_:_:).html":{"name":"<^(_:_:)","abstract":"<p>Replace all locations in the input with the same value."},"Functions/^>(_:_:).html":{"name":"^>(_:_:)","abstract":"<p>Is flipped version of <code>&lt;^</code></p>"},"Functions/>>-(_:_:).html":{"name":">>-(_:_:)","abstract":"<p>Sequentially compose two actions, passing any value produced by the first"},"Functions/-<<(_:_:).html":{"name":"-<<(_:_:)","abstract":"<p>Same as <code>&gt;&gt;-</code>, but with the arguments interchanged.</p>"},"Functions/<*>(_:_:).html":{"name":"<*>(_:_:)","abstract":"<p>Sequential application.</p>"},"Functions.html#/s:15FunctionalSwift6liftA2AA6EitherOyq1_q0_Gq0_x_q_tc_ADyq1_xGADyq1_q_Gtr2_lF":{"name":"liftA2(_:_:_:)","abstract":"<p>Lift a binary function to actions.</p>"},"Functions.html#/s:15FunctionalSwift6liftA3AA6EitherOyq2_q1_Gq1_x_q_q0_tc_ADyq2_xGADyq2_q_GADyq2_q0_Gtr3_lF":{"name":"liftA3(_:_:_:_:)","abstract":"<p>Lift a ternary function to actions.</p>"},"Functions.html#/s:15FunctionalSwift6liftA2q0_Sgq0_x_q_tc_xSgq_Sgtr1_lF":{"name":"liftA2(_:_:_:)","abstract":"<p>Lift a binary function to actions.</p>"},"Functions.html#/s:15FunctionalSwift6liftA3q1_Sgq1_x_q_q0_tc_xSgq_Sgq0_Sgtr2_lF":{"name":"liftA3(_:_:_:_:)","abstract":"<p>Lift a ternary function to actions.</p>"},"Functions.html#/s:15FunctionalSwift6liftA2Sayq0_Gq0_x_q_tc_SayxGSayq_Gtr1_lF":{"name":"liftA2(_:_:_:)","abstract":"<p>Lift a binary function to actions.</p>"},"Functions.html#/s:15FunctionalSwift6liftA3Sayq1_Gq1_x_q_q0_tc_SayxGSayq_GSayq0_Gtr2_lF":{"name":"liftA3(_:_:_:_:)","abstract":"<p>Lift a ternary function to actions.</p>"},"Functions.html#/s:15FunctionalSwift2idxxlF":{"name":"id(_:)","abstract":"<p>Identity function.</p>"},"Functions.html#/s:15FunctionalSwift5constxq_cxr0_lF":{"name":"const(_:)","abstract":"<p><code>const(x)</code> is a unary function which evaluates to <code>x</code> for all inputs.</p>"},"Functions/•(_:_:).html":{"name":"•(_:_:)","abstract":"<p>Function composition.</p>"},"Functions/<|(_:_:).html":{"name":"<|(_:_:)","abstract":"<p>Application operator. This operator is redundant, since ordinary"},"Functions/|>(_:_:).html":{"name":"|>(_:_:)","abstract":"<p>Application operator. This operator is redundant, since ordinary"},"Extensions/Collection.html#/s:s10CollectionP15FunctionalSwiftsAARzs9Equatable7ElementRpzlE5splitSay11SubSequenceQzGAF2on_tF":{"name":"split(on:)","abstract":"<p>Returns the longest possible subsequences of the collection, in order,","parent_name":"Collection"},"Extensions/Collection.html#/s:s10CollectionP15FunctionalSwiftsAARzs9Equatable7ElementRpzlE5splitSay11SubSequenceQzGqd__5oneOf_tsAARd__AEQyd__AFRSlF":{"name":"split(oneOf:)","abstract":"<p>Split on any of the given elements.</p>","parent_name":"Collection"},"Extensions/Collection.html#/s:s10CollectionP15FunctionalSwiftE6chunksSay11SubSequenceQzGSi2of_tF":{"name":"chunks(of:)","abstract":"<p><code>chunks(of: n)</code> splits a list into length-n pieces. The last piece will be","parent_name":"Collection"},"Extensions/Sequence.html#/s:s8SequenceP15FunctionalSwiftsAARzAC6Monoid7ElementRpzlE7mconcatAFyF":{"name":"mconcat()","abstract":"<p>Fold a sequence using monoid.</p>","parent_name":"Sequence"},"Extensions/Sequence.html":{"name":"Sequence"},"Extensions/Collection.html":{"name":"Collection"},"Enums/Either.html#/s:15FunctionalSwift6EitherO4leftACyxq_GxcAEmr0_lF":{"name":"left","abstract":"<p>Left value of <code>Either</code>.</p>","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO5rightACyxq_Gq_cAEmr0_lF":{"name":"right","abstract":"<p>Right value of <code>Either</code>.</p>","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO3mapACyxqd__Gqd__q_clF":{"name":"map(_:)","abstract":"<p>Evaluates the given closure when this <code>Either</code> instance is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO5rightACyxq_Gq_cAEmr0_lF\">right</a></code>,","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO7flatMapACyxqd__GAEq_clF":{"name":"flatMap(_:)","abstract":"<p>Evaluates the given closure when this <code>Either</code> instance is not <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO4leftACyxq_GxcAEmr0_lF\">left</a></code>,","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO5firstACyqd__q_Gqd__xclF":{"name":"first(_:)","abstract":"<p>Evaluates the given closure when this <code>Either</code> instance is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO4leftACyxq_GxcAEmr0_lF\">left</a></code>,","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO6secondACyxqd__Gqd__q_clF":{"name":"second(_:)","abstract":"<p>Evaluates the given closure when this <code>Either</code> instance is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO5rightACyxq_Gq_cAEmr0_lF\">right</a></code>,","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO5bimapACyqd__qd_0_Gqd__xc_qd_0_q_ctr0_lF":{"name":"bimap(_:_:)","abstract":"<p>Evaluates the first given closure when this <code>Either</code> instance is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO4leftACyxq_GxcAEmr0_lF\">left</a></code>,","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO7mapLeftACyqd__q_Gqd__xclF":{"name":"mapLeft(_:)","abstract":"<p>Evaluates the given closure when this <code>Either</code> instance is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO4leftACyxq_GxcAEmr0_lF\">left</a></code>,","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO4leftxSgv":{"name":"left","abstract":"<p>Returns value if the <code>Either</code> instance is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO4leftACyxq_GxcAEmr0_lF\">left</a></code> or <code>nil</code> if it is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO5rightACyxq_Gq_cAEmr0_lF\">right</a></code></p>","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO5rightq_Sgv":{"name":"right","abstract":"<p>Returns value if the <code>Either</code> instance is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO5rightACyxq_Gq_cAEmr0_lF\">right</a></code> or <code>nil</code> if it is <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Either.html#/s:15FunctionalSwift6EitherO4leftACyxq_GxcAEmr0_lF\">left</a></code></p>","parent_name":"Either"},"Enums/Either.html#/s:15FunctionalSwift6EitherO6eitherqd__qd__xc_qd__q_ctlF":{"name":"either(_:_:)","abstract":"<p>Case analysis for the Either type.</p>","parent_name":"Either"},"Enums/Either.html":{"name":"Either","abstract":"<p>The <code>Either</code> type represents values with two possibilities: a value of type <code>Either&lt;A, B&gt;</code> is either <code>left(a)</code> or"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Typealiases.html":{"name":"Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}